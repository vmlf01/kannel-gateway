dnl Process this file with autoconf to produce a configure script.

dnl initialization

AC_PREREQ(2.13)

AC_INIT(gw/alt_charsets.h)
AC_CONFIG_HEADER(config.h)
AC_SUBST(SHELL)

dnl Gateway version number.

AC_DEFINE_UNQUOTED(VERSION, "`head -1 VERSION`")

dnl Target installation directory for documentation

AC_SUBST(docdir)
docdir='${prefix}/doc/kannel'

dnl Checks for programs.

AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_RANLIB
AC_PROG_YACC
AC_PROG_LEX
AC_PATH_PROG(PERL, perl)

AC_CHECK_FILE(/sbin/start-stop-daemon, , 
		STARTSTOPDAEMONSRC="utils/start-stop-daemon.c")
AC_SUBST(STARTSTOPDAEMONSRC)

dnl Checks for libraries.

AC_CHECK_LIB(m, log)
AC_CHECK_LIB(socket, accept)
AC_CHECK_LIB(nsl, inet_ntoa)
AC_CHECK_LIB(pthread, pthread_create)
AC_CHECK_LIB(z, gzopen)
AC_CHECK_LIB(xml, xmlDocGetRootElement, ,
	echo "You MUST have the gnome-xml library installed"; exit 1)
case `xml-config --version` in 
1.8.6[)] AC_DEFINE(HAVE_LIBXML_1_8_6) [;;] 
1.8.7[)] [;;] 
*[)] echo "Libxml is too old. You need at least 1.8.6." [;] exit 1 [;;] 
esac
AC_SEARCH_LIBS(inet_aton, c resolv)

dnl Checks for header files.

AC_HEADER_STDC
AC_CHECK_HEADERS(sys/ioctl.h sys/time.h sys/types.h unistd.h stdint.h)
AC_CHECK_HEADERS(pthread.h getopt.h)

dnl Checks for typedefs, structures, and compiler characteristics.

AC_CHECK_SIZEOF(int, 4)
AC_CHECK_SIZEOF(long, 4)

dnl Checks for library functions.

AC_CHECK_FUNCS(gettimeofday select socket strdup inet_aton cfmakeraw getopt_long)
AC_CHECK_FUNC(getopt, , LIBOBJS="$LIBOBJS utils/attgetopt.o")
AC_SUBST(LIBOBJS)


dnl Extra feature checks

dnl GW_HAVE_TYPE_FROM(HDRNAME, TYPE, HAVENAME, DESCRIPTION)
AC_DEFUN(GW_HAVE_TYPE_FROM, [
	AC_CACHE_CHECK([for $2 in <$1>], gw_cv_type_$3,
		AC_TRY_COMPILE([#ifdef HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif
#include <$1>
], [$2 foo;],
			gw_cv_type_$3=yes, gw_cv_type_$3=no))
	if test $gw_cv_type_$3 = yes; then
		AC_DEFINE($3, 1, $4)
	fi
])

dnl GW_HAVE_FUNC_FROM(HDRNAME, FUNC, HAVENAME, DESCRIPTION)
AC_DEFUN(GW_HAVE_FUNC_FROM, [
	AC_CACHE_CHECK([for $2 in <$1>], gw_cv_func_$3,
		AC_TRY_COMPILE([#include <$1>], [void *foo = $2;],
			gw_cv_func_$3=yes, gw_cv_func_$3=no))
	if test $gw_cv_func_$3 = yes; then
		AC_DEFINE($3, 1, $4)
	fi
])

GW_HAVE_TYPE_FROM(sys/socket.h,
	socklen_t,
	HAVE_SOCKLEN_T,
	[Defined if there is a socklen_t in <sys/socket.h>])
GW_HAVE_TYPE_FROM(sys/types.h,
	uint32_t,
	HAVE_TYPE_UINT32_T_IN_TYPES_H,
	[Defined if there is a uint32_t in <sys/types.h>])
GW_HAVE_TYPE_FROM(stdint.h,
	uint32_t,
	HAVE_TYPE_UINT32_T_IN_STDINT_H,
	[Defined if there is a uint32_t in <stdint.h>])
GW_HAVE_TYPE_FROM(inttypes.h,
	uint32_t,
	HAVE_TYPE_UINT32_T_IN_INTTYPES_H,
	[Defined if there is a uint32_t in <inttypes.h>])
if test "$gw_cv_type_HAVE_TYPE_UINT32_T_IN_TYPES_H" = yes -o "$gw_cv_type_HAVE_TYPE_UINT32_T_IN_STDINT_H" = yes -o "$gw_cv_type_HAVE_TYPE_UINT32_T_IN_INTTYPES_H" = yes; then
	AC_DEFINE(HAVE_TYPE_UINT32_T, 1,
		[Defined if we have uint32_t in <sys/types.h> or <stdint.h>])
fi

GW_HAVE_FUNC_FROM(netdb.h, getnameinfo,
	HAVE_GETNAMEINFO, [Defined if we have getnameinfo() in <netdb.h>])
GW_HAVE_FUNC_FROM(arpa/inet.h, inet_aton,
	HAVE_INET_ATON, [Defined if we have inet_aton() in <arpa/inet.h>])


dnl DocBook stuff

AC_CHECK_PROG(JADE, jade, jade, :)
AC_CHECK_PROG(JADETEX, jadetex, jadetex, :)
AC_CHECK_PROG(DVIPS, dvips, dvips, :)
AC_CHECK_PROG(FIG2DEV, fig2dev, fig2dev, :)
AC_SUBST(HTML_DSL)
for file in /usr/lib/sgml/stylesheet/dsssl/docbook/nwalsh/html/docbook.dsl \
	/usr/lib/sgml/stylesheets/nwalsh-modular/html/docbook.dsl
do
	AC_CHECK_FILE($file,HTML_DSL=$file)
done
AC_SUBST(TEX_DSL)
for file in /usr/lib/sgml/stylesheet/dsssl/docbook/nwalsh/print/docbook.dsl \
	/usr/lib/sgml/stylesheets/nwalsh-modular/print/docbook.dsl
do
	AC_CHECK_FILE($file,TEX_DSL=$file)
done

AC_SUBST(DOCSTARGET)
if test "x$HTML_DSL" = "x" -o "x$TEX_DSL" = "x"
then
	DOCSTARGET="no-docs"
else
	DOCSTARGET="docs"
fi

dnl Implement --enable-docs option.

AC_ARG_ENABLE(docs,
[  --enable-docs	  enable building of documentation], [
  echo enabling documentation
  DOCSTARGET="docs"
], [
  echo disabling documentation
  DOCSTARGET="no-docs"
])

dnl Implement --enable-debug option.

AC_ARG_ENABLE(debug,
[  --enable-debug	  enable non-reentrant development time debugging], [
  echo enabling debugging
  if test -n "$GCC"; then
    CFLAGS="$CFLAGS -Wall"
  fi
  AC_DEFINE(WS_DEBUG)
])

dnl Final Output

AC_OUTPUT(Makefile)
