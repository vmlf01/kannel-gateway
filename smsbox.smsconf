# SMS BOX conf  for (WAP/SMS) Gateway
#
# This is defination file. Do NOT edit this file
#
#
#--------------------------------------------------------------
# The first group is general SMS BOX settings
#
# bearerbox-host = (hostname)
#	the machine that runs the bearer box. Name or IP
#
# bearerbox-port = (port number)
#	bearerbox port number for SMS BOX connections (set in bearerbox
#	 configuration file)
#
# sendsms-port = (port number)
#	number to accept send-sms queries
#	(the actual url is http://sms.box.host:port/cgi-bin/...)
#	if not set or 0 or less, no HTTP sendsms supported
#
# sms-length = (number)
#	maximum length of one SMS message. Defaults to 160 characters
#
# pid-file = (file path)
#       the file in which the pid number of the bearer box is written
#       if not set, no such a file is written (default = not set)
#
# log-file = (file name)
#	file for logging. This is in addition to possible command
#	line options (-F). If not set, do not use additional log-file
#
# log-level = (verbosity level)
#	verbosity level for this log-file. Defaults to '0' (DEBUG)
#
# global-sender = (phone number)
#	faked phone number for sender. Overrun by service faked-sender,
#	and does not work with all SMS Centers. For send-sms HTTP requests,
#	the priority for sender number setting is: 1. faked-sender
#	2. from-field in send-sms request 3. global-sender
#
# Those not present use default values, which are following ones:
# (read from file bb.h, check that, too)
#
bearerbox-host = localhost
bearerbox-port = 13001
# sendsms-port = 22022
sms-length = 160
# pid-file = "/tmp/smsbox.pid"
# log-file = "/tmp/smsbox.log"
log-level = 0
# global-faked = 123456789

#--------------------------------------------------------------- 
# Remaining groups are service/sendsms definitions:
#
# keyword = (word) 
#	one word (alphabetic characters) that identify the service,
#	used as first word in SMS. Not case-sensitive. 'default' is special
#	keyword which is used if no matching keyword is found
#
# aliases = (list) 
#	possible aliases for the service. Each entry is separated by ';',
#	like "mail;m;mial;posti;post;p". Not case sensitive.
#
# url = (url)
#	requested URL. The url can include list of parameters, which are
#	parsed before the url is fetched. Parameters are:
#	
#                %s      next word from the SMS message, starting with
#                        the second one (i.e., the first word, the
#                        keyword, is not included); problematic characters
#                        for URLs are encoded (e.g., '+' becomes '%2B')
#                
#                %S      same as %s, but '*' is converted to '~' (useful
#                        when user enters a URL) and URL encoding isn't done
#                        (all others do URL encode)
#
#                %r      words not yet used by %s; e.g., if the message
#                        is "FOO BAR FOOBAR BAZ", and the has been one %s,
#                        %r will mean "FOOBAR BAZ"
#                
#                %a      all words of the SMS message, including the first
#                        one
#                
#                %t      the time the message was sent, formatted as
#                        "YYYY-MM-DD HH:MM", e.g., "1999-09-21 14:18"
#                
#                %p      the phone number of the sender of the SMS message
#                
#                %P      the phone number of the receiver of the SMS message
#                
#                %q      like %p, but a leading `00' is replaced with `+'
#
#                %Q      like %P, but a leading `00' is replaced with `+'
#                
#
# file = (file-name)
#	file read from local disc. Only if not url set. All escape codes
#	in url-fetch are supported here also. The last character of the file
#	(usually linefeed) is removed.
#
# text = (text)
#	predefined text answer. Only if not url or file set. Escape codes are
#	usable here, too.
#
# prefix = (prefix)
# suffix = (suffix) 
#	stuff in answer that is cut away, only things between prefix
#	and suffix is left. In-casesensitive. Matches for the first prefix
#	and then for first suffix.
#--
# username = (name)
#	instead of service definitions, send sms users can be added. This
#	is the 'login name' and it is casesensitive. Note that none of the
#	above are useful with send sms service, but all below are.
#
# password = (password)
#	associated password
#
#--
# faked-sender = (phone number)
#	this number is set as sender. Some SMSCs ignore this. This option
#	overrides all other Gateway sender setting methods.
#
# max-messages = (number)
#	the total maximum of SMSes in reply. Default is 1. If the max-messages
#	is set to 0, no reply is sent, except for error messages.
#
# split-chars = (character-list)
#	allowed characters to split the message split into several messages.
#	So, with "#!" the message is split from last '#' or '!', which is 
#       included in the previous part
#
# split-suffix = (string)
#	if the message is split into several ones, this string is appended to 
#	each message except the last one
#
# omit-empty = (number)
#	if set to other than '0', 'no data' messages are not sent to receiver
#	in a case of empty reply from the service provider.
#	
#
# Sample services and user:
#
username = foo
password = bar

keyword = nop
text = "You asked nothing and I did it!"

keyword = default
text = "No services available"

