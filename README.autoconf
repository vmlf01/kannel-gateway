
-------------------------------------------------------------------------
Current scope of autoconfiguration: And it still works as a WAP gateway ||
-------------------------------------------------------------------------

The toplevel Makefile, generated by running ./configure, is used to
build the gw/, gwlib/, and test/ directories. For now, HAVE_THREADS
is hardcoded in gw{,lib}/Makefile.am. The following features are
probed, and hopefully handled correctly where not available:

- HAVE_SOCKLEN_T
	define socklen_t as 'int' in gwlib/socket.h
- HAVE_TYPE_UINT32_T
	define uint32_t to 'unsigned long' in gwlib/gwstdint.h
- HAVE_STDINT_H
	include <stdint.h> in gwlib/gwstdint.h
- HAVE_GETNAMEINFO
	if not defined (e.g. everywhere, provide replacement
	in gwlib/socket.c
- HAVE_INET_ATON
	if not defined (e.g. Solaris 2.6), provide replacement
	in gwlib/socket.c

The sources have been built on glibc systems, libc5 systems,
and Solaris 2.6. They are said to work as a WAP gateway on
the glibc systems.


-------------------------------------------------------------------------
How is autoconf used in the sources, what needs to be done?            ||
-------------------------------------------------------------------------

Each source file using the result of a feature test, contains a line
	#include <config.h>
very much at its top, and then use defines from there. New feature test
macros are defined in configure.in.

TODO:
- make a working stub for cfmakeraw on Solaris (see gw/smsc_emi.c)
- check for feature-complete pthread library (any examples?)
- whatever


-------------------------------------------------------------------------
Some information on autoconf related files                             ||
-------------------------------------------------------------------------

The root files driving autoconf are maintained by hand:

- configure.in
	this file defines the feature checks done in the configure script
	which is generated by running 'autoconf'.
- Makefile.am, in the toplevel directory as well as subdirectories
	The toplevel Makefile.am lists subdirectories.
	The subdirectory Makefile.am's contain build information for
	some part of the gateway.
- acconfig.h, supplementing config.h.in
	Here, nonstandard things for config.h are predefined. Whatever
	new checks you introduce into configure.in, make sure the
	resulting CPP variables are defined here.

Some files are for distribution, but can be regenerated:

- configure, generated by 'autoconf'
- config.h.in, can be regenerated by running 'autoheader'
- stamp-h.in, generated by 'autoheader' for timestamping
- Makefile.in, also in subdirs, can be built using 'automake'
- install-sh, missing, and mkinstalldirs are brought in by automake -a

The following files provide information; they are checked for existence
when you use 'automake' to create Makefile.in from Makefile.am, or they
are used by 'make dist' and friends when building distribution files:

- ChangeLog, an ongoing log of changes
- AUTHORS, empty for now
- COPYING, a statement of copying / licensing terms
- INSTALL, the generic autoconf file, for now. awful.
- NEWS, empty
- README, README.autoconf, README.docbook, README.src
- Release-0.1, VERSION, and Rules.mk, from the original package
- config.h.top, config.h.bot, ensure config.h is included exactly once.
  These two files are used by 'autoheader' when building config.h.in; we use
  them to encapsulate config.h in an '#ifndef X/#define X/#endif' brace,
  making the header file fit for multiple inclusion in the sources.

All these files, together with the source files and headers, will be
part of a distribution. Once you created Makefiles with configure,
you can use 'make dist' to generate a .tar.gz distribution in the
toplevel directory. The version number (part of the distribution
file name) is defined at the top of configure.in, in the call to
AM_INIT_AUTOMAKE(). Rerun automake and autoconf after changing it.

Also included in the distribution are the doc/ and utils/ directories.
Other files for extra distribution are added to the EXTRA_DIST variable
in the toplevel Makefile.am (then run 'automake'.)



-------------------------------------------------------------------------
Versions of tools used in this setup                                   ||
-------------------------------------------------------------------------

I use functions and files from the following packages:

- GNU autoconf 2.14
- GNU automake 1.4


-------------------------------------------------------------------------
Bad 'dist' Makefile.in targets, at least with automake 1.4             ||
-------------------------------------------------------------------------

The automake I have, version 1.4, has a bug in the generation of
the 'distdir:' Makefile.in target: in the '@for' loop, '$$' instead of '$$d'
appears in one place. Here is a patch against the automake script:

--- automake1.4	Tue Dec 28 20:42:30 1999
+++ automake	Tue Dec 28 20:42:59 1999
@@ -2367,7 +2367,7 @@
 	$output_rules .= "\t  d=\$(srcdir); \\\n";
     }
     $output_rules .= ("\t  if test -d \$\$d/\$\$file; then \\\n"
-		      . "\t    cp -pr \$\$/\$\$file \$(distdir)/\$\$file; \\\n"
+		      . "\t    cp -pr \$\$d/\$\$file \$(distdir)/\$\$file; \\\n"
 		      . "\t  else \\\n"
 		      . "\t    test -f \$(distdir)/\$\$file \\\n"
 		      . "\t    || ln \$\$d/\$\$file \$(distdir)/\$\$file 2> /dev/null \\\n"

