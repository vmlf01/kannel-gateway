
-------------------------------------------------------------------------
New and renamed source files (in second patch)                         ||
-------------------------------------------------------------------------

gwlib/conffile.{c,h} (former config.{c,h}
gwlib/getnameinfo.h
gwlib/gwstdint.h


-------------------------------------------------------------------------
Current scope of autoconfiguration: we can build. test_msg looks ok.   ||
-------------------------------------------------------------------------

The patch is based on the gateway source as found in CVS late 28.12.1999.
The toplevel Makefile is renamed Makefile.orig, and two files are renamed
(gwlib/config.{c,h} -> gwlib/conffile.{c,h}), to remove a conflict with
the configure generated config.h in the toplevel directory.

At this stage, autoconf probing results are used for the build process,
but the platform specific tests in the source are mostly as of gateway-0.1.
Makefiles are generated by configure. The HAVE_THREADS define is hardcoded
in {gw,gwlib}/Makefile.am, the only feature test used right now is
for HAVE_SOCKLEN_T. The build is test-compiled on a Debian libc6 system,
but the resulting executables are not run at all.

The toplevel Makefile builds the gw/, gwlib/, and test/ directories.

UPDATE: it builds ok on Solaris 2.6 (with GCC), Debian GLIBC, and on
two related libc5 ex-SuSE systems, using 2.0.35 and 2.3.17 kernel includes.


-------------------------------------------------------------------------
How is autoconf used in the sources, what needs to be done?            ||
-------------------------------------------------------------------------

The generated config.h will be used more. Each source file using the result
of a feature test, will contain a line
	#include <config.h>
very much at its top, and then use defines from there. New feature test
macros are defined in configure.in (this will move to acinclude.m4.)

Features:
- check and workaround for missing getnameinfo() (from newer <netdb.h> DONE
- check and workaround for missing <stdint.h> DONE
- compensate for missing inet_aton on Solaris DONE
- make a (nonworking) stub for cfmakeraw on Solaris DONE
- check for feature-complete pthread library (any examples?)

I hope the process becomes organic after that.


-------------------------------------------------------------------------
How to best integrate this setup with CVS?                             ||
-------------------------------------------------------------------------

Which files introduced by autoconf support should go into CVS? Minimally,
the files listed below as maintained by hand, and the supporting information,
need to be in. What about the generated files? They will be included in
distributions, so maybe they should be in CVS, too. What about the finally
generated Makefiles? They are missing from distributions, what about CVS?


-------------------------------------------------------------------------
Some information on autoconf related files                             ||
-------------------------------------------------------------------------

The root files driving autoconf are maintained by hand:

- configure.in
- Makefile.am, in the toplevel directory as well as subdirectories
- acconfig.h, supplementing config.h.in
- config.h.top, config.h.bot, ensure config.h is included exactly once
- ChangeLog, an ongoing log of changes

Some files are for distribution, but can be regenerated:

- configure, generated by 'autoconf'
- config.h.in, can be regenerated by running 'autoheader'
- stamp-h.in, generated by 'autoheader' for timestamping
- Makefile.in, also in subdirs, can be built using 'automake'
- install-sh, missing, and mkinstalldirs are brought in by automake -a

Less frequently changing, the following files provide information;
they are checked for existence when you use 'automake' to create
Makefile.in from Makefile.am:

- AUTHORS, empty for now
- COPYING, a reference to LICENSE
- INSTALL, the generic one for now
- LICENSE, the license for the original package
- NEWS, empty
- README, README.autoconf, README.docbook, README.src
- Release-0.1, VERSION, and Rules.mk, from the original package

All these files, together with the source files and headers, should be
part of a distribution; in fact, once you created Makefiles by running
the configure script, you can use 'make dist' to generate gateway-0.2.tar.gz.
Also included in the distribution are the doc/, test/, and utils/
directories. Other files for extra distribution can be added to
the EXTRA_DIST variable in the toplevel Makefile.am (then run 'automake'.) 
The gateway version number (0.2 for now) can be changed at the top
of configure.in, in the AM_INIT_AUTOMAKE() call. Rerun automake and autoconf
after changing it.


-------------------------------------------------------------------------
Versions of tools used in this setup                                   ||
-------------------------------------------------------------------------

I use functions and files from the following packages:

- GNU autoconf 2.14
- GNU automake 1.4


-------------------------------------------------------------------------
Bad 'dist' Makefile.in targets, at least with automake 1.4             ||
-------------------------------------------------------------------------

The automake I have, version 1.4, has a bug in the generation of
the 'distdir:' Makefile.in target: in the '@for' loop, '$$' instead of '$$d'
appears in one place. Here is a patch against the automake script:

--- automake1.4	Tue Dec 28 20:42:30 1999
+++ automake	Tue Dec 28 20:42:59 1999
@@ -2367,7 +2367,7 @@
 	$output_rules .= "\t  d=\$(srcdir); \\\n";
     }
     $output_rules .= ("\t  if test -d \$\$d/\$\$file; then \\\n"
-		      . "\t    cp -pr \$\$/\$\$file \$(distdir)/\$\$file; \\\n"
+		      . "\t    cp -pr \$\$d/\$\$file \$(distdir)/\$\$file; \\\n"
 		      . "\t  else \\\n"
 		      . "\t    test -f \$(distdir)/\$\$file \\\n"
 		      . "\t    || ln \$\$d/\$\$file \$(distdir)/\$\$file 2> /dev/null \\\n"

