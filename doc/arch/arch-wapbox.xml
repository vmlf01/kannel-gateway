<chapter>
<title>DRAFT: WAP box</title>

	<para>This chapter describes the internal workings of the WAP
	box: how state machines are implemented, other major code modules,
	threads, communication with WML content servers, how WML and
	WMLScript are converted to a binary format, timeouts with HTTP
	requests and other external communications, how to deal with a
	broken bearer box connection, how the box is started automatically.
	</para>
	
	<para>This chapter will be written by Lars and Aarno.</para>

<para><literallayout>
types of events (WTP):
WTP PDU's: different event for each PDU type
WSP service primitives
timer signals

types of events (WSP):
WTP service primitives
pseudo-events generated by the WSP/WAP box implementation
http request events?

data structures.
WTPEvent
WTPMachine
WSPSessionEvent
WSPSessionMachine
WSPMethodEvent
WSPMethodMachine

algorithm (WTP engine):
read message from bearer box
convert it into a WTPEvent
find or create the appropriate WTPMachine
feed the WTPEvent to the WTPMachine
the WTPMachine handles the event according to the state tables in the WAP spec
if necessary, the WTPMachine sends events to WSP engine

algorithm (WSP engine):
get WSPEvent from WTP engine
find or create the appropriate WSPSessionMachine or WSPMethodMachine
feed the WSPEvent to the state machine
the state machine handles the event according to state tables in WAP spec

coding strategy for WTP and WSP engines:
like for messages
</literallayout></para>

</chapter>
